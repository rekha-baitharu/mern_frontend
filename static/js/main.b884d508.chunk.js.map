{"version":3,"sources":["frontend/table.js","reportWebVitals.js","index.js"],"names":["Tablee","props","handleData","setState","skip","state","limit","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","console","log","result","users","handleDelete","id","delete_id","status","open","snack","message","handleOpen","handleCloseOpen","handleEdit","card","handleClose","handleClick","name","email","handleRight","parseInt","handleLeft","handleCloseSnackbar","this","style","background","height","backgroundSize","Typography","variant","fontFamily","marginLeft","color","paddingTop","Card","width","marginTop","CardContent","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","s","IconButton","onClick","_id","Icon","Button","Dialog","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","TextField","label","margin","onChange","e","target","value","DialogActions","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b884d508.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    IconButton, Icon, DialogActions, DialogTitle, TextField, Card, CardContent, Snackbar,\r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Paper, Button, Dialog, DialogContent\r\n} from \"@material-ui/core\";\r\nimport images from \"../images/images.jpg\";\r\n\r\nexport default class Tablee extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            card: false,\r\n            open: false,\r\n            skip: 0,\r\n            limit: 4,\r\n            id: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            users: [],\r\n            snack: false,\r\n            message: false,\r\n            delete_id:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleData();\r\n    }\r\n    //FUNCTION CALL FOR GET DATA FROM BACK-END\r\n    handleData = () => {\r\n        this.setState({\r\n            skip: this.state.skip,\r\n            limit: this.state.limit\r\n        })\r\n        fetch(\"http://localhost:8000/get_users\", {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"skip\": this.state.skip,\r\n                \"limit\": this.state.limit\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(json.result);\r\n                this.setState({\r\n                    users: json.result\r\n                })\r\n            });\r\n    }\r\n    //FUNCTION CALL FOR DELETE ONE ROW\r\n    handleDelete = () => {\r\n        // this.setState({\r\n        //     open: false\r\n        // })\r\n        fetch(\"http://localhost:8000/delete_user\", {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.state.delete_id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                if (json.status === true) {\r\n                    this.handleData();\r\n                    this.setState({\r\n                        open:false\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        snack: true,\r\n                        message: json.message,\r\n                    })\r\n                }\r\n\r\n            });\r\n    }\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n    handleCloseOpen = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n    //FUNCTION CALL AFTER CLICKING ON EDIT BUTTON\r\n    handleEdit = () => {\r\n        this.setState({\r\n            card: true\r\n        })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            card: false\r\n        })\r\n    }\r\n    handleClick = () => {\r\n        fetch(\"http://localhost:8000/update_user\", {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\": this.state.id,\r\n                \"name\": this.state.name,\r\n                \"email\": this.state.email\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                this.setState({\r\n                    card: false\r\n                })\r\n                this.handleData();\r\n            });\r\n    }\r\n\r\n    //AFTER CLICKING ON RIGHT ARROW\r\n    handleRight = () => {\r\n        this.setState({\r\n            skip: parseInt(this.state.skip) + parseInt(this.state.limit),\r\n            limit: this.state.limit\r\n        })\r\n        fetch(\"http://localhost:8000/get_users\", {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"skip\": this.state.skip,\r\n                \"limit\": this.state.limit\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                this.handleData();\r\n            });\r\n    }\r\n\r\n    //AFTER CLICKING ON LEFT ARROW\r\n    handleLeft = () => {\r\n        this.setState({\r\n            skip: parseInt(this.state.skip) - parseInt(this.state.limit),\r\n            limit: this.state.limit\r\n        })\r\n        fetch(\"http://localhost:8000/get_users\", {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"skip\": this.state.skip,\r\n                \"limit\": this.state.limit\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                this.handleData();\r\n            });\r\n    }\r\n\r\n    //Snackbar\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            snack: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: \"url(\" + images + \")\", height: \"100vh\", backgroundSize: \"cover\" }}>\r\n                <Typography variant='h3' style={{ fontFamily: \"Serif\", marginLeft: 500, color: \"brown\", paddingTop: 10 }}>Welcome to the User Table</Typography>\r\n                <Card style={{ height: 500, width: 1000, marginLeft: 250, marginTop: 50 }}>\r\n                    <CardContent>\r\n                        <TableContainer component={Paper}>\r\n\r\n                            <Table aria-label=\"simple table\" >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Name</TableCell>\r\n                                        <TableCell align=\"right\">Email</TableCell>\r\n                                        <TableCell align=\"right\">Delete Users</TableCell>\r\n                                        <TableCell align=\"right\">Edit Users</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.users.map((s) => {\r\n                                        return (\r\n                                            <TableRow>\r\n                                                <TableCell>{s.name}</TableCell>\r\n                                                <TableCell align=\"right\">{s.email}</TableCell>\r\n                                                <TableCell align=\"right\"><IconButton onClick={() => { this.setState({delete_id:s._id, open:true })}}><Icon>delete</Icon></IconButton></TableCell>\r\n                                                <TableCell align=\"right\"><Button onClick={()=>{this.setState({id:s._id, card:true})}}>Edit</Button></TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })}\r\n                                    {/* <TableRow>\r\n                                        <TableCell>Rekha</TableCell>\r\n                                        <TableCell>Rekha@gmail.com</TableCell>\r\n                                        <TableCell><IconButton><Icon>delete</Icon></IconButton></TableCell>\r\n                                        <TableCell><Button>Edit</Button></TableCell>\r\n                                        </TableRow> */}\r\n                                </TableBody>\r\n\r\n                            </Table>\r\n                            <IconButton onClick={this.handleLeft} ><Icon>keyboard_arrow_left</Icon></IconButton>\r\n                            <IconButton onClick={this.handleRight}><Icon>keyboard_arrow_right</Icon></IconButton>\r\n                        </TableContainer>\r\n                        {/* <Button onClick={this.handleData} variant=\"contained\" color=\"primary\" style={{ marginLeft: 430, marginTop: 50 }}>Get User Table</Button> */}\r\n                    </CardContent>\r\n                </Card>\r\n\r\n\r\n                {/* AFTER CLICKING ON EDIT BUTTON */}\r\n                <Dialog open={this.state.card} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                    <DialogTitle id=\"form-dialog-title\"><Typography variant='h5' style={{ fontFamily: \"Serif\", color: \"darkblue\" }}>CHANGE YOUR NAME AND EMAIL ID</Typography></DialogTitle>\r\n                    <DialogContent>\r\n                        {/* <Typography style={{ fontFamily: \"Serif\", color: \"blue\" }}>Enter your id:</Typography> */}\r\n                        {/* <TextField\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            label=\"Enter Your id\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            onChange={(e) => { this.setState({ id: e.target.value }) }}\r\n                        /><br /> */}\r\n                        <Typography style={{ fontFamily: \"Serif\", color: \"blue\" }}>Enter your new name:</Typography>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            label=\"Enter Your New Name\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            onChange={(e) => { this.setState({ name: e.target.value }) }}\r\n                        /><br />\r\n                        <Typography style={{ fontFamily: \"Serif\", color: \"blue\" }}>Enter your new email-id:</Typography>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            label=\"Enter Your New Email-Id\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            onChange={(e) => { this.setState({ email: e.target.value }) }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            CANCEL\r\n                            </Button>\r\n                        <Button onClick={this.handleClick} color=\"primary\">\r\n                            ADD\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                {/* AFTER CLICKING ON DELETE BUTTON */}\r\n                <Dialog open={this.state.open} onClose={this.handleCloseOpen} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                    <DialogTitle id=\"form-dialog-title\"><Typography variant='h5' style={{ fontFamily: \"Serif\", color: \"darkblue\" }}>DELETE ONE OBJECT</Typography></DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography style={{ fontFamily: \"Serif\", color: \"blue\" }}>Are you sure you want to delete this?</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseOpen} color=\"primary\">\r\n                            CANCEL\r\n                            </Button>\r\n                        <Button onClick={this.handleDelete} color=\"primary\">\r\n                            DELETE\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                {/* Snackbar */}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.snack}\r\n                    autoHideDuration={10000}\r\n                    onClose={this.handleCloseSnackbar}\r\n                    message={this.state.message}\r\n                    action={\r\n                        <IconButton onClick={this.handleCloseSnackbar}>\r\n                            <Icon style={{ color: \"white\" }}>\r\n                                close\r\n                            </Icon>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Tablee from './frontend/table';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Tablee />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}